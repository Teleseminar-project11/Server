import java.io.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

//class for setting up and running SQL queries. Accessed through the class DatabaseController 
//
public class VideoStorageQueries {
	
	private Connection connect = null;
	private Statement statement = null;
	private PreparedStatement preparedStatement = null;
	private ResultSet resultSet = null;
	
	
	public static Connection getConnection() throws Exception {
	    String driver = "org.gjt.mm.mysql.Driver";
	    String url = "jdbc:mysql://localhost/?";
	    String username = "TODO";
	    String password = "TODO";

	    Class.forName(driver);
	    Connection conn = DriverManager.getConnection(url, username, password);
	    return conn;
	}
	
	
	private String createInsertQuery(JSONObject data) {
		
		int numItems = data.length();
		
		String[] keys = JSONObject.getNames(data);
		String query = "INSERT INTO videoStorage (";
		JSONArray a = data.names();
		try{
			System.out.println(a.getString(2));
		}catch(Exception e) {
			
		}
		
		System.out.println(keys[2]);
		
		for(int i = 0; i < numItems; i++) {
			query += keys[i];
			if(i != numItems - 1) {
				query += ", ";
			}
			
		}
		query += ") VALUES (";
		
		for(int i = 0; i < numItems; i++) {
			try {
				query += data.get(keys[i]);
				if(i != numItems - 1) {
					query += ", ";
				}
			}catch(JSONException e) {
				
			}
		}
		query += ")";
		
		return query;
	}
	
	
	private JSONObject getJsonFromResultSet(ResultSet resultSet){
		
		JSONObject json = new JSONObject();
		
		try {
			//find the column name
			ResultSetMetaData metaData = resultSet.getMetaData();
			int numColumns = metaData.getColumnCount();
			String[] columnNames = new String[numColumns];
	      
			for(int i = 0; i < numColumns; i++) {
				columnNames[i] = metaData.getColumnName(i+1);
			}
	      
	     	//turn answer from query into a string
			while(resultSet.next()) {
	    	  
				for(int columnIndex = 0; columnIndex < numColumns; columnIndex++) {
	    		  
					if(columnIndex == numColumns) {
						columnIndex = 0;
					}
					String columnType = metaData.getColumnTypeName(columnIndex+1);
	    	  	
					System.out.println(columnNames[columnIndex] + " " + columnType);
	    	  
					//add the name to json
					if(columnType.equals("String")) {
						json.put(columnNames[columnIndex], resultSet.getString(columnIndex+1));
					}else if(columnType.equals("INT")) {
						json.put(columnNames[columnIndex], resultSet.getInt(columnIndex+1));
					}else if(columnType.equals("TIME")) {
						json.put(columnNames[columnIndex], resultSet.getTime(columnIndex+1));
					}else if(columnType.equals("DATE")) {
						json.put(columnNames[columnIndex], resultSet.getDate(columnIndex+1));
					}
				}
				//add code to seperate tuples
			}
		}catch(Exception e) {
			System.out.println("Error occured in getJsonFromResultSet: " + e);
		}
	    return json;
	}
	
	
	private String getStringFromJson(JSONObject json) {
		
		return "";
	}
	
	
	public JSONObject getAllData() {
		
		int numItems = 0;
		String answer = "{";
		JSONObject json = new JSONObject();
		
		try {
			
		      // setup the connection with the DB.
		      connect = getConnection();
		      statement = connect.createStatement();
		      resultSet = statement.executeQuery("SELECT count(entry_id) from VideoStorage");
		      
		      if(resultSet.next()) {
		    	  numItems = resultSet.getInt(1);
		      }

		      // statements allow to issue SQL queries to the database
		      statement = connect.createStatement();
		      // resultSet gets the result of the SQL query
		      resultSet = statement.executeQuery("select * from VideoStorage");

		      json = getJsonFromResultSet(resultSet);
		      
		} catch (Exception e) {
		    	System.out.println("Error occured in getAllData: " + e);
		}
		
		//turn json into string if we need to 
		
		getStringFromJson(json);
		
		return json;
	}
	
	
	//this method will get a json object
	//it will use the data in the object to store a new tuple in the database
	
	public void saveNewVideo(JSONObject data) {
		
		String query = createInsertQuery(data);
		System.out.println(query);
		
		try {
		
	      connect = getConnection();
	      // statements allow to issue SQL queries to the database
	      statement = connect.createStatement();
	      // resultSet gets the result of the SQL query
	      statement.executeUpdate(query);
	      
		}catch(Exception e) {
			System.out.println("Error occured in saveNewVideo: " + e);
		}
	}
}
